(old, ugly notes)

Adding a polygon to Mario Raceway

88D02C is the pointer to the display list for West 13. Points to 3EB8. Go to offset 3EB8 in the RSP data and you'll see it
eventually (at C05228 in an expanded ROM) calls a display list: 07:1A80. We want to hijack this call.

We can simply tack on to the end of the level script, overwriting the FF:
26 1A5050 20000070 51EB15 29E07D 2A FF
which means:
begin display list
set texture size to 32x32, repeating on both axes
select texture 0 (red-and-yellow checkered wall) - unknown value is 0070 as usual
set polygon base offset to 0x15EB, where the end-of-pipe polygons are
draw a triangle using points 0, 94, and 126 from this offset
end display list
end script

The RSP commands generated by this script are written to 80270DF8 in RAM. By putting a bunch of random script commands at the end
of the script and searching for their generated RSP commands from here, we can determine that our added commands end up at
80277730 which is 0x6938 from the beginning. So that display list call needs to call 07:006938.
Note that unfortunately this RAM address is not fixed, you'll need to find it each time. Do so by tracing the routine at 802A9B74
to see where it writes commands.

Simply change the call at C05228 to call our new display list by changing its last 2 bytes to 6938, and... the game breaks.
Oh noes! As it turns out the game doesn't like us adding more RSP commands. Doing so writes over other things in memory causing
weirdness. We need to tell it to allocate more memory for these commands. Fortunately the word at offset 0x24 in the header
controls this. I haven't investigated how it works - it's probably just the number of bytes or words to allocate, or the number
of commands that will be generated - but simply increase it by 0x200 or so and now we have plenty more memory to work with. Now
when you play the game it will run as normal except you'll see an added polygon at the end of the pipe. Yay! Also, the track will
change to that checkerboard pattern because I didn't put in a command to change back to the track texture. That's easy enough to
do but there's little room for it in the expanded ROM before you start writing over Choco Mountain.

Interestingly, the call we changed to call this is unimportant. We don't need to call it in our new code! The game runs just fine.
Maybe it's redundant or draws some extra polygon that's difficult to see. Silly Nintendo.

The polygon will disappear when you get close, though, because we only hacked display list 13. Once you get closer it runs display
list 14 instead and the polygon disappears. Well let's fix that the same way. #14 West is at 88D03C, which points us to 43D8. Go
there, find the nearest Call Display List command, change the last 2 bytes to 6938. #15 is at 88D04C, pointing to 4840. Repeat
the procedure for it too and viola, the polygon doesn't disappear. (Well, unless you look at it from a funny angle, or turn around
and look from behind, triggering a display list for a direction other than West. It should be obvious by now how to fix that,
though. :-))