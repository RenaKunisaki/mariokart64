0060 B1101214

80270DF8 Mario Raceway RSP5
80117958, 801404C8 0xBC command with this address as parameter (set base ptr)
80150274 looks like segment map; on stack?

all written every frame of course
AC6D0004

802A7CE0 writes the correct value as the level is loading, but too late

802B8D80 seems to be the level header
802AA95C reads the script output size onto the stack
802AAA40 reads it, calls 802A9AF4, which does look like it's doing
something related to allocation, with T1 (at 802A9B48) being the end of the
heap or something; it loads an address from 8015F72C, subtracts this size from
it and stores it back
At 80001280 and 802AA9C4 it gets set to 8028DF00
changing this just breaks it of course, but it looks like it does use that
memory for stuff when you do so

802A86D0 also sets it to 8028DF00
802A9B54 -> 80276C00
802AA83C -> 8026A4B8

set a read+write breakpoint and watch it *magically* change back to 8028DF00
but if you change it back again, it seems to work just fine, but this pointer
points to the *end* of the heap, so set it to like 80800000
It looks like the only necessary changes are 802AA9AA -> 8080,
802AA9BE -> 0000, and then it should use expanded RAM for track resources.
It doesn't appear to do any out-of-memory checks, just writes over RAM and
crashes if there's too much; 4MB per track should be plenty though :-)

802AA9A8|3C 19 80 28|3C 18 80 28|3C 01 80 16|10 00 00 04
802AA9B8|AC 38 F7 2C|37 39 DF 00|3C 01 80 16|AC 39 F7 2C

3C1980283C1880283C01801610000004
String is at ROM 113FB8 which is past the first 1MB
change it there, works great :-D
the magic was probably Mupen64's debugger not working the same as Nemu's

we can probably change the other instance to get *all* dynamic allocation into
the upper 4MB.
80001270|00 00 00 00|3C 0E 80 28|35 CE DF 00|3C 01 80 16|....<..(5...<...
80001280|AC 2E F7 2C|00 00 20 25|0C 0A 9E E5|3C 05 80 00|...,.. %....<...
80001274 LUI $T6, 8028
80001278 ORI $T6, $T6, DF00
80001280 SW $T6, F72C($AT)

000000003C0E802835CEDF003C018016
String is at ROM 1E70
Seems to work but it looks like some things still load to the old address
However I don't think there's any need to do this anyway

Also, change ROM 688 to 00000000 to bypass the checksum entirely.

We'll test this by telling it Mario Raceway needs 3MB of script... and it
works perfectly :-D

113FBA -> 8080
113FCE -> 00


80000428 sets the initial SP, which probably never changes